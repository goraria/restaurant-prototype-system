// ================================
// üí¨ MESSAGES CONSTANTS
// ================================
// T·∫•t c·∫£ th√¥ng b√°o h·ªá th·ªëng b·∫±ng ti·∫øng Vi·ªát v√† ti·∫øng Anh

// Language type
export type Language = 'vi' | 'en';

// Success messages
export const SUCCESS_MESSAGES = {
  vi: {
    // Authentication
    LOGIN_SUCCESS: 'ƒêƒÉng nh·∫≠p th√†nh c√¥ng',
    LOGOUT_SUCCESS: 'ƒêƒÉng xu·∫•t th√†nh c√¥ng',
    REGISTER_SUCCESS: 'ƒêƒÉng k√Ω t√†i kho·∫£n th√†nh c√¥ng',
    PASSWORD_CHANGED: 'ƒê·ªïi m·∫≠t kh·∫©u th√†nh c√¥ng',
    PASSWORD_RESET: 'ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u th√†nh c√¥ng',
    VERIFICATION_SENT: 'Email x√°c th·ª±c ƒë√£ ƒë∆∞·ª£c g·ª≠i',
    EMAIL_VERIFIED: 'Email ƒë√£ ƒë∆∞·ª£c x√°c th·ª±c',

    // User management
    PROFILE_UPDATED: 'C·∫≠p nh·∫≠t h·ªì s∆° th√†nh c√¥ng',
    ADDRESS_ADDED: 'Th√™m ƒë·ªãa ch·ªâ th√†nh c√¥ng',
    ADDRESS_UPDATED: 'C·∫≠p nh·∫≠t ƒë·ªãa ch·ªâ th√†nh c√¥ng',
    ADDRESS_DELETED: 'X√≥a ƒë·ªãa ch·ªâ th√†nh c√¥ng',

    // Restaurant operations
    RESTAURANT_CREATED: 'T·∫°o nh√† h√†ng th√†nh c√¥ng',
    RESTAURANT_UPDATED: 'C·∫≠p nh·∫≠t th√¥ng tin nh√† h√†ng th√†nh c√¥ng',
    MENU_UPDATED: 'C·∫≠p nh·∫≠t th·ª±c ƒë∆°n th√†nh c√¥ng',
    MENU_ITEM_ADDED: 'Th√™m m√≥n ƒÉn th√†nh c√¥ng',
    MENU_ITEM_UPDATED: 'C·∫≠p nh·∫≠t m√≥n ƒÉn th√†nh c√¥ng',
    MENU_ITEM_DELETED: 'X√≥a m√≥n ƒÉn th√†nh c√¥ng',

    // Order management
    ORDER_CREATED: 'ƒê·∫∑t h√†ng th√†nh c√¥ng',
    ORDER_UPDATED: 'C·∫≠p nh·∫≠t ƒë∆°n h√†ng th√†nh c√¥ng',
    ORDER_CANCELLED: 'H·ªßy ƒë∆°n h√†ng th√†nh c√¥ng',
    ORDER_CONFIRMED: 'X√°c nh·∫≠n ƒë∆°n h√†ng th√†nh c√¥ng',
    ORDER_PREPARING: 'ƒê∆°n h√†ng ƒëang ƒë∆∞·ª£c chu·∫©n b·ªã',
    ORDER_READY: 'ƒê∆°n h√†ng ƒë√£ s·∫µn s√†ng',
    ORDER_DELIVERED: 'Giao h√†ng th√†nh c√¥ng',
    ORDER_COMPLETED: 'Ho√†n th√†nh ƒë∆°n h√†ng',

    // Payment
    PAYMENT_SUCCESS: 'Thanh to√°n th√†nh c√¥ng',
    PAYMENT_CONFIRMED: 'X√°c nh·∫≠n thanh to√°n th√†nh c√¥ng',
    REFUND_PROCESSED: 'Ho√†n ti·ªÅn th√†nh c√¥ng',

    // Table management
    TABLE_RESERVED: 'ƒê·∫∑t b√†n th√†nh c√¥ng',
    RESERVATION_CONFIRMED: 'X√°c nh·∫≠n ƒë·∫∑t b√†n th√†nh c√¥ng',
    RESERVATION_CANCELLED: 'H·ªßy ƒë·∫∑t b√†n th√†nh c√¥ng',
    CHECK_IN_SUCCESS: 'Check-in th√†nh c√¥ng',

    // Staff management
    STAFF_ADDED: 'Th√™m nh√¢n vi√™n th√†nh c√¥ng',
    STAFF_UPDATED: 'C·∫≠p nh·∫≠t th√¥ng tin nh√¢n vi√™n th√†nh c√¥ng',
    SCHEDULE_UPDATED: 'C·∫≠p nh·∫≠t l·ªãch l√†m vi·ªác th√†nh c√¥ng',
    TIME_TRACKED: 'Ch·∫•m c√¥ng th√†nh c√¥ng',
    PAYROLL_PROCESSED: 'X·ª≠ l√Ω l∆∞∆°ng th√†nh c√¥ng',

    // Inventory
    INVENTORY_UPDATED: 'C·∫≠p nh·∫≠t kho h√†ng th√†nh c√¥ng',
    SUPPLIER_ADDED: 'Th√™m nh√† cung c·∫•p th√†nh c√¥ng',
    PURCHASE_ORDER_CREATED: 'T·∫°o ƒë∆°n h√†ng mua th√†nh c√¥ng',
    STOCK_ADJUSTED: 'ƒêi·ªÅu ch·ªânh t·ªìn kho th√†nh c√¥ng',

    // Reviews and support
    REVIEW_SUBMITTED: 'G·ª≠i ƒë√°nh gi√° th√†nh c√¥ng',
    REVIEW_RESPONDED: 'Ph·∫£n h·ªìi ƒë√°nh gi√° th√†nh c√¥ng',
    SUPPORT_TICKET_CREATED: 'T·∫°o ticket h·ªó tr·ª£ th√†nh c√¥ng',
    TICKET_RESOLVED: 'Gi·∫£i quy·∫øt ticket th√†nh c√¥ng',

    // General
    SAVED: 'L∆∞u th√†nh c√¥ng',
    DELETED: 'X√≥a th√†nh c√¥ng',
    UPLOADED: 'T·∫£i l√™n th√†nh c√¥ng',
    SENT: 'G·ª≠i th√†nh c√¥ng',
    UPDATED: 'C·∫≠p nh·∫≠t th√†nh c√¥ng'
  },
  en: {
    // Authentication
    LOGIN_SUCCESS: 'Login successful',
    LOGOUT_SUCCESS: 'Logout successful',
    REGISTER_SUCCESS: 'Registration successful',
    PASSWORD_CHANGED: 'Password changed successfully',
    PASSWORD_RESET: 'Password reset successful',
    VERIFICATION_SENT: 'Verification email sent',
    EMAIL_VERIFIED: 'Email verified successfully',

    // User management
    PROFILE_UPDATED: 'Profile updated successfully',
    ADDRESS_ADDED: 'Address added successfully',
    ADDRESS_UPDATED: 'Address updated successfully',
    ADDRESS_DELETED: 'Address deleted successfully',

    // Restaurant operations
    RESTAURANT_CREATED: 'Restaurant created successfully',
    RESTAURANT_UPDATED: 'Restaurant updated successfully',
    MENU_UPDATED: 'Menu updated successfully',
    MENU_ITEM_ADDED: 'Menu item added successfully',
    MENU_ITEM_UPDATED: 'Menu item updated successfully',
    MENU_ITEM_DELETED: 'Menu item deleted successfully',

    // Order management
    ORDER_CREATED: 'Order created successfully',
    ORDER_UPDATED: 'Order updated successfully',
    ORDER_CANCELLED: 'Order cancelled successfully',
    ORDER_CONFIRMED: 'Order confirmed successfully',
    ORDER_PREPARING: 'Order is being prepared',
    ORDER_READY: 'Order is ready',
    ORDER_DELIVERED: 'Order delivered successfully',
    ORDER_COMPLETED: 'Order completed',

    // Payment
    PAYMENT_SUCCESS: 'Payment successful',
    PAYMENT_CONFIRMED: 'Payment confirmed successfully',
    REFUND_PROCESSED: 'Refund processed successfully',

    // Table management
    TABLE_RESERVED: 'Table reserved successfully',
    RESERVATION_CONFIRMED: 'Reservation confirmed successfully',
    RESERVATION_CANCELLED: 'Reservation cancelled successfully',
    CHECK_IN_SUCCESS: 'Check-in successful',

    // Staff management
    STAFF_ADDED: 'Staff added successfully',
    STAFF_UPDATED: 'Staff updated successfully',
    SCHEDULE_UPDATED: 'Schedule updated successfully',
    TIME_TRACKED: 'Time tracked successfully',
    PAYROLL_PROCESSED: 'Payroll processed successfully',

    // Inventory
    INVENTORY_UPDATED: 'Inventory updated successfully',
    SUPPLIER_ADDED: 'Supplier added successfully',
    PURCHASE_ORDER_CREATED: 'Purchase order created successfully',
    STOCK_ADJUSTED: 'Stock adjusted successfully',

    // Reviews and support
    REVIEW_SUBMITTED: 'Review submitted successfully',
    REVIEW_RESPONDED: 'Review responded successfully',
    SUPPORT_TICKET_CREATED: 'Support ticket created successfully',
    TICKET_RESOLVED: 'Ticket resolved successfully',

    // General
    SAVED: 'Saved successfully',
    DELETED: 'Deleted successfully',
    UPLOADED: 'Uploaded successfully',
    SENT: 'Sent successfully',
    UPDATED: 'Updated successfully'
  }
} as const;

// Error messages
export const ERROR_MESSAGES = {
  vi: {
    // Authentication errors
    INVALID_CREDENTIALS: 'Email ho·∫∑c m·∫≠t kh·∫©u kh√¥ng ch√≠nh x√°c',
    UNAUTHORIZED: 'B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p',
    TOKEN_EXPIRED: 'Phi√™n ƒëƒÉng nh·∫≠p ƒë√£ h·∫øt h·∫°n',
    ACCOUNT_LOCKED: 'T√†i kho·∫£n ƒë√£ b·ªã kh√≥a',
    EMAIL_NOT_VERIFIED: 'Email ch∆∞a ƒë∆∞·ª£c x√°c th·ª±c',
    WEAK_PASSWORD: 'M·∫≠t kh·∫©u qu√° y·∫øu',
    PASSWORD_MISMATCH: 'M·∫≠t kh·∫©u kh√¥ng kh·ªõp',

    // Validation errors
    REQUIRED_FIELD: 'Tr∆∞·ªùng n√†y l√† b·∫Øt bu·ªôc',
    INVALID_EMAIL: 'Email kh√¥ng h·ª£p l·ªá',
    INVALID_PHONE: 'S·ªë ƒëi·ªán tho·∫°i kh√¥ng h·ª£p l·ªá',
    INVALID_FORMAT: 'ƒê·ªãnh d·∫°ng kh√¥ng h·ª£p l·ªá',
    TOO_SHORT: 'Qu√° ng·∫Øn',
    TOO_LONG: 'Qu√° d√†i',
    INVALID_NUMBER: 'S·ªë kh√¥ng h·ª£p l·ªá',
    INVALID_DATE: 'Ng√†y kh√¥ng h·ª£p l·ªá',

    // Business logic errors
    RESTAURANT_NOT_FOUND: 'Kh√¥ng t√¨m th·∫•y nh√† h√†ng',
    MENU_ITEM_NOT_FOUND: 'Kh√¥ng t√¨m th·∫•y m√≥n ƒÉn',
    ORDER_NOT_FOUND: 'Kh√¥ng t√¨m th·∫•y ƒë∆°n h√†ng',
    USER_NOT_FOUND: 'Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng',
    TABLE_NOT_AVAILABLE: 'B√†n kh√¥ng c√≥ s·∫µn',
    INSUFFICIENT_STOCK: 'Kh√¥ng ƒë·ªß h√†ng t·ªìn kho',
    ORDER_ALREADY_CONFIRMED: 'ƒê∆°n h√†ng ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n',
    CANNOT_CANCEL_ORDER: 'Kh√¥ng th·ªÉ h·ªßy ƒë∆°n h√†ng',
    PAYMENT_FAILED: 'Thanh to√°n th·∫•t b·∫°i',
    INVALID_DISCOUNT_CODE: 'M√£ gi·∫£m gi√° kh√¥ng h·ª£p l·ªá',
    DISCOUNT_EXPIRED: 'M√£ gi·∫£m gi√° ƒë√£ h·∫øt h·∫°n',
    MINIMUM_ORDER_NOT_MET: 'Ch∆∞a ƒë·∫°t gi√° tr·ªã ƒë∆°n h√†ng t·ªëi thi·ªÉu',

    // Staff errors
    STAFF_NOT_FOUND: 'Kh√¥ng t√¨m th·∫•y nh√¢n vi√™n',
    SHIFT_CONFLICT: 'Xung ƒë·ªôt l·ªãch l√†m vi·ªác',
    ALREADY_CLOCKED_IN: 'ƒê√£ ch·∫•m c√¥ng v√†o',
    NOT_CLOCKED_IN: 'Ch∆∞a ch·∫•m c√¥ng v√†o',
    INSUFFICIENT_PERMISSIONS: 'Kh√¥ng ƒë·ªß quy·ªÅn h·∫°n',

    // Inventory errors
    ITEM_NOT_FOUND: 'Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m',
    SUPPLIER_NOT_FOUND: 'Kh√¥ng t√¨m th·∫•y nh√† cung c·∫•p',
    LOW_STOCK_WARNING: 'C·∫£nh b√°o t·ªìn kho th·∫•p',
    EXPIRED_ITEMS: 'C√≥ s·∫£n ph·∫©m ƒë√£ h·∫øt h·∫°n',

    // File upload errors
    FILE_TOO_LARGE: 'File qu√° l·ªõn',
    INVALID_FILE_TYPE: 'Lo·∫°i file kh√¥ng ƒë∆∞·ª£c h·ªó tr·ª£',
    UPLOAD_FAILED: 'T·∫£i l√™n th·∫•t b·∫°i',

    // Network errors
    NETWORK_ERROR: 'L·ªói k·∫øt n·ªëi m·∫°ng',
    SERVER_ERROR: 'L·ªói m√°y ch·ªß',
    SERVICE_UNAVAILABLE: 'D·ªãch v·ª• kh√¥ng kh·∫£ d·ª•ng',
    TIMEOUT: 'H·∫øt th·ªùi gian ch·ªù',

    // General errors
    SOMETHING_WENT_WRONG: 'C√≥ l·ªói x·∫£y ra',
    ACCESS_DENIED: 'Truy c·∫≠p b·ªã t·ª´ ch·ªëi',
    OPERATION_FAILED: 'Thao t√°c th·∫•t b·∫°i',
    INVALID_INPUT: 'D·ªØ li·ªáu ƒë·∫ßu v√†o kh√¥ng h·ª£p l·ªá',
    DUPLICATE_ENTRY: 'D·ªØ li·ªáu ƒë√£ t·ªìn t·∫°i'
  },
  en: {
    // Authentication errors
    INVALID_CREDENTIALS: 'Invalid email or password',
    UNAUTHORIZED: 'You are not authorized to access this resource',
    TOKEN_EXPIRED: 'Session has expired',
    ACCOUNT_LOCKED: 'Account has been locked',
    EMAIL_NOT_VERIFIED: 'Email has not been verified',
    WEAK_PASSWORD: 'Password is too weak',
    PASSWORD_MISMATCH: 'Passwords do not match',

    // Validation errors
    REQUIRED_FIELD: 'This field is required',
    INVALID_EMAIL: 'Invalid email address',
    INVALID_PHONE: 'Invalid phone number',
    INVALID_FORMAT: 'Invalid format',
    TOO_SHORT: 'Too short',
    TOO_LONG: 'Too long',
    INVALID_NUMBER: 'Invalid number',
    INVALID_DATE: 'Invalid date',

    // Business logic errors
    RESTAURANT_NOT_FOUND: 'Restaurant not found',
    MENU_ITEM_NOT_FOUND: 'Menu item not found',
    ORDER_NOT_FOUND: 'Order not found',
    USER_NOT_FOUND: 'User not found',
    TABLE_NOT_AVAILABLE: 'Table is not available',
    INSUFFICIENT_STOCK: 'Insufficient stock',
    ORDER_ALREADY_CONFIRMED: 'Order has already been confirmed',
    CANNOT_CANCEL_ORDER: 'Cannot cancel order',
    PAYMENT_FAILED: 'Payment failed',
    INVALID_DISCOUNT_CODE: 'Invalid discount code',
    DISCOUNT_EXPIRED: 'Discount code has expired',
    MINIMUM_ORDER_NOT_MET: 'Minimum order value not met',

    // Staff errors
    STAFF_NOT_FOUND: 'Staff not found',
    SHIFT_CONFLICT: 'Shift conflict detected',
    ALREADY_CLOCKED_IN: 'Already clocked in',
    NOT_CLOCKED_IN: 'Not clocked in',
    INSUFFICIENT_PERMISSIONS: 'Insufficient permissions',

    // Inventory errors
    ITEM_NOT_FOUND: 'Item not found',
    SUPPLIER_NOT_FOUND: 'Supplier not found',
    LOW_STOCK_WARNING: 'Low stock warning',
    EXPIRED_ITEMS: 'Items have expired',

    // File upload errors
    FILE_TOO_LARGE: 'File is too large',
    INVALID_FILE_TYPE: 'File type not supported',
    UPLOAD_FAILED: 'Upload failed',

    // Network errors
    NETWORK_ERROR: 'Network error',
    SERVER_ERROR: 'Server error',
    SERVICE_UNAVAILABLE: 'Service unavailable',
    TIMEOUT: 'Request timeout',

    // General errors
    SOMETHING_WENT_WRONG: 'Something went wrong',
    ACCESS_DENIED: 'Access denied',
    OPERATION_FAILED: 'Operation failed',
    INVALID_INPUT: 'Invalid input',
    DUPLICATE_ENTRY: 'Duplicate entry'
  }
} as const;

// Warning messages
export const WARNING_MESSAGES = {
  vi: {
    LOW_STOCK: 'T·ªìn kho th·∫•p',
    EXPIRING_SOON: 'S·∫Øp h·∫øt h·∫°n',
    PAYMENT_PENDING: 'Thanh to√°n ƒëang ch·ªù x·ª≠ l√Ω',
    ORDER_DELAYED: 'ƒê∆°n h√†ng b·ªã tr·ªÖ',
    MAINTENANCE_MODE: 'H·ªá th·ªëng ƒëang b·∫£o tr√¨',
    UNSAVED_CHANGES: 'C√≥ thay ƒë·ªïi ch∆∞a ƒë∆∞·ª£c l∆∞u',
    CONFIRM_DELETE: 'B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a?',
    CONFIRM_CANCEL: 'B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën h·ªßy?',
    DATA_WILL_BE_LOST: 'D·ªØ li·ªáu s·∫Ω b·ªã m·∫•t',
    IRREVERSIBLE_ACTION: 'H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c'
  },
  en: {
    LOW_STOCK: 'Low stock',
    EXPIRING_SOON: 'Expiring soon',
    PAYMENT_PENDING: 'Payment pending',
    ORDER_DELAYED: 'Order delayed',
    MAINTENANCE_MODE: 'System under maintenance',
    UNSAVED_CHANGES: 'You have unsaved changes',
    CONFIRM_DELETE: 'Are you sure you want to delete?',
    CONFIRM_CANCEL: 'Are you sure you want to cancel?',
    DATA_WILL_BE_LOST: 'Data will be lost',
    IRREVERSIBLE_ACTION: 'This action cannot be undone'
  }
} as const;

// Info messages
export const INFO_MESSAGES = {
  vi: {
    LOADING: 'ƒêang t·∫£i...',
    PROCESSING: 'ƒêang x·ª≠ l√Ω...',
    SAVING: 'ƒêang l∆∞u...',
    SENDING: 'ƒêang g·ª≠i...',
    UPLOADING: 'ƒêang t·∫£i l√™n...',
    WELCOME: 'Ch√†o m·ª´ng!',
    FIRST_TIME_USER: 'L·∫ßn ƒë·∫ßu s·ª≠ d·ª•ng?',
    TUTORIAL_AVAILABLE: 'H∆∞·ªõng d·∫´n c√≥ s·∫µn',
    NO_DATA: 'Kh√¥ng c√≥ d·ªØ li·ªáu',
    EMPTY_LIST: 'Danh s√°ch tr·ªëng',
    SEARCH_NO_RESULTS: 'Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£',
    TRY_DIFFERENT_KEYWORDS: 'Th·ª≠ t·ª´ kh√≥a kh√°c',
    MORE_FILTERS_AVAILABLE: 'C√≥ th√™m b·ªô l·ªçc',
    SYSTEM_NOTIFICATION: 'Th√¥ng b√°o h·ªá th·ªëng'
  },
  en: {
    LOADING: 'Loading...',
    PROCESSING: 'Processing...',
    SAVING: 'Saving...',
    SENDING: 'Sending...',
    UPLOADING: 'Uploading...',
    WELCOME: 'Welcome!',
    FIRST_TIME_USER: 'First time here?',
    TUTORIAL_AVAILABLE: 'Tutorial available',
    NO_DATA: 'No data available',
    EMPTY_LIST: 'Empty list',
    SEARCH_NO_RESULTS: 'No results found',
    TRY_DIFFERENT_KEYWORDS: 'Try different keywords',
    MORE_FILTERS_AVAILABLE: 'More filters available',
    SYSTEM_NOTIFICATION: 'System notification'
  }
} as const;

// Helper function ƒë·ªÉ l·∫•y message theo ng√¥n ng·ªØ
export const getMessage = (
  type: 'success' | 'error' | 'warning' | 'info',
  key: string,
  language: Language = 'vi'
): string => {
  const messageMap = {
    success: SUCCESS_MESSAGES,
    error: ERROR_MESSAGES,
    warning: WARNING_MESSAGES,
    info: INFO_MESSAGES
  };

  const messages = messageMap[type][language] as Record<string, string>;
  return messages[key] || `Message not found: ${type}.${key}`;
};

// Export all message types
export const MESSAGES = {
  SUCCESS: SUCCESS_MESSAGES,
  ERROR: ERROR_MESSAGES,
  WARNING: WARNING_MESSAGES,
  INFO: INFO_MESSAGES,
  getMessage
} as const;

// Type exports
export type SuccessMessages = typeof SUCCESS_MESSAGES;
export type ErrorMessages = typeof ERROR_MESSAGES;
export type WarningMessages = typeof WARNING_MESSAGES;
export type InfoMessages = typeof INFO_MESSAGES;
export type MessageType = 'success' | 'error' | 'warning' | 'info';
